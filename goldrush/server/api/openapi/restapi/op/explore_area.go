// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ExploreAreaHandlerFunc turns a function with the right signature into a explore area handler
type ExploreAreaHandlerFunc func(ExploreAreaParams) ExploreAreaResponder

// Handle executing the request and returning a response
func (fn ExploreAreaHandlerFunc) Handle(params ExploreAreaParams) ExploreAreaResponder {
	return fn(params)
}

// ExploreAreaHandler interface for that can handle valid explore area params
type ExploreAreaHandler interface {
	Handle(ExploreAreaParams) ExploreAreaResponder
}

// NewExploreArea creates a new http.Handler for the explore area operation
func NewExploreArea(ctx *middleware.Context, handler ExploreAreaHandler) *ExploreArea {
	return &ExploreArea{Context: ctx, Handler: handler}
}

/*ExploreArea swagger:route POST /explore exploreArea

Returns amount of treasures in the provided area at full depth.

*/
type ExploreArea struct {
	Context *middleware.Context
	Handler ExploreAreaHandler
}

func (o *ExploreArea) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewExploreAreaParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
