// Code generated by go-swagger; DO NOT EDIT.

package op

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"

	"github.com/Djarvur/allcups-itrally-2020-task/api/openapi/model"
)

// DigOKCode is the HTTP code returned for type DigOK
const DigOKCode int = 200

/*DigOK List of treasures found.

swagger:response digOK
*/
type DigOK struct {

	/*
	  In: Body
	*/
	Payload model.TreasureList `json:"body,omitempty"`
}

// NewDigOK creates DigOK with default headers values
func NewDigOK() *DigOK {

	return &DigOK{}
}

// WithPayload adds the payload to the dig o k response
func (o *DigOK) WithPayload(payload model.TreasureList) *DigOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the dig o k response
func (o *DigOK) SetPayload(payload model.TreasureList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DigOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = model.TreasureList{}
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

func (o *DigOK) DigResponder() {}

/*DigDefault - 422.1000: wrong coordinates
- 422.1001: wrong depth


swagger:response digDefault
*/
type DigDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *model.Error `json:"body,omitempty"`
}

// NewDigDefault creates DigDefault with default headers values
func NewDigDefault(code int) *DigDefault {
	if code <= 0 {
		code = 500
	}

	return &DigDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the dig default response
func (o *DigDefault) WithStatusCode(code int) *DigDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the dig default response
func (o *DigDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the dig default response
func (o *DigDefault) WithPayload(payload *model.Error) *DigDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the dig default response
func (o *DigDefault) SetPayload(payload *model.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DigDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

func (o *DigDefault) DigResponder() {}

type DigNotImplementedResponder struct {
	middleware.Responder
}

func (*DigNotImplementedResponder) DigResponder() {}

func DigNotImplemented() DigResponder {
	return &DigNotImplementedResponder{
		middleware.NotImplemented(
			"operation authentication.Dig has not yet been implemented",
		),
	}
}

type DigResponder interface {
	middleware.Responder
	DigResponder()
}
